#version 330 core

// A Simple Vertex shader

// These layouts are values passed in from the main program

layout(location = 0) in vec3 vertexPosition;
layout(location = 1) in vec3 particlePosition;
layout(location = 2) in vec4 particleColour;
layout(location = 3) in vec2 particleTextureData;

// Values that will go to the fragment shader
out vec4 pColour;
out vec2 texCoords;

//the View and Projection Matrix
uniform mat4 VP;
uniform vec3 CamRight_W;
uniform vec3 CamUp_W;

void main(){	
	
	vec3 vertexPosition_worldspace = 
					particlePosition
					+ CamRight_W * vertexPosition.x * 1
					+ CamUp_W * vertexPosition.y * 1;

	//set the vertex position to the appropriate position plus the particle's position
	gl_Position =  VP*vec4(vertexPosition_worldspace,1);
	
	//pass the colour straight through
	pColour = particleColour;

	texCoords = particleTextureData;
}
